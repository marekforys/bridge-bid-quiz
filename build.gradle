plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example.bridge'
version = '0.0.1-SNAPSHOT'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }
}

java {
    // Use Java 17 toolchain so builds run with a supported JDK even if system JDK is newer
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

ext {
    springDocVersion = '2.3.0'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
    // Ensure tests execute on Java 17, not the Gradle daemon JVM
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Ensure runtime tasks (like bootRun) also use Java 17, not the daemon JVM
tasks.withType(JavaExec).configureEach {
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// JaCoCo coverage configuration
jacoco {
    toolVersion = '0.8.10'
}

tasks.named('jacocoTestReport', org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn tasks.test
    reports {
        xml.required.set(true)   // required for Codecov
        html.required.set(true)  // human-readable report
        csv.required.set(false)
    }
}

tasks.named('check') {
    dependsOn tasks.named('jacocoTestReport')
}
